#!/usr/bin/env python3

"""
Local Docker installations like Docker for Mac support local Kubernetes
clusters. However, they often leave behind old supporting images on updates.
This cleans them out but assumes the latest images are in use by the cluster and
so won't be deleted by Docker.
"""

from argparse import ArgumentParser
from inspect import getdoc
from subprocess import SubprocessError, Popen, PIPE, run
from sys import modules
from typing import Iterable

from utils import docker


ArgumentParser(description=getdoc(modules[__name__])).parse_args()


def parse_output(out: Iterable[bytes]) -> Iterable[str]:
    for raw in out:
        line = raw.decode()
        if ("k8s" in line) or ("kube-" in line):
            name, tag, *_ = line.split()
            yield f"{name}:{tag}"


with Popen(["docker", "images"], stdout=PIPE) as proc:
    if not proc.stdout:
        raise RuntimeError("missing expected output from `docker images`")
    images = list(parse_output(proc.stdout))
    if proc.wait() != 0:
        raise SubprocessError()
if images:
    docker("rmi", *images)
